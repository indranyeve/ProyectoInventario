@model Inventario.Client.Models.MvcTransaccionModel
@{
    ViewBag.Title = "AddOrEdit";
}

<div class="body-form">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.Id_Transaccion)

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo_Transaccion)
            @Html.DropDownListFor(model => model.Tipo_Transaccion, new SelectList(Enum.GetValues(typeof(Inventario.Client.Models.Tipo))))
            @Html.ValidationMessageFor(model => model.Tipo_Transaccion)
        </div>

        <div class="form-group">

            <label>Artículo</label>
            @Html.DropDownListFor(model => model.Id_Articulo, (List<SelectListItem>)ViewBag.ArticuloList)
            @Html.ValidationMessageFor(model => model.Id_Articulo)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha)
            @Html.EditorFor(x => x.Fecha, new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(model => model.Fecha)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad)
            @Html.EditorFor(model => model.Cantidad)
            @Html.ValidationMessageFor(model => model.Cantidad)
        </div>

        <div class="form-group">

            <label>Almacen</label>
            @Html.DropDownListFor(model => model.Id_Almacen, (List<SelectListItem>)ViewBag.AlmacenList)
            @Html.ValidationMessageFor(model => model.Id_Almacen)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado)
            @Html.EditorFor(model => model.Estado)
            @Html.ValidationMessageFor(model => model.Estado)
        </div>

        <div class="form-group">
            <input type="submit" value="Sutmit" class="btn bg-primary" />
            <input type="submit" value="Reset" class="btn btn-dark" />
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
}